services:
  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    networks:
      - backend

  api-gateway:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - login-service
      - comment-service
      - project-service
    networks:
      - backend

  login-service:
    build: ./services/login
    environment:
      - NODE_ENV=development
      - VAULT_SECRET_PATH=secret/login-service
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_TOKEN=${VAULT_TOKEN}      
    depends_on:
      mongo:
        condition: service_started
      vault:
        condition: service_healthy
    networks:
      - backend

  comment-service:
    build: ./services/comments
    environment:
      - ENV=development
      - VAULT_SECRET_PATH=secret/comment-service
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_TOKEN=${VAULT_TOKEN}      
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_started
      vault:
        condition: service_healthy
    networks:
      - backend

  project-service:
    build: ./services/projects
    environment:
      - ENV=development
      - VAULT_SECRET_PATH=secret/project-service
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_TOKEN=${VAULT_TOKEN}
    depends_on:
      mongo:
        condition: service_started
      vault:
        condition: service_healthy
    networks:
      - backend

  notify-service:
    build: ./services/notifications
    environment:
      - ENV=development
      - VAULT_SECRET_PATH=secret/notifications-service
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_TOKEN=${VAULT_TOKEN}
    depends_on:
      rabbitmq:
        condition: service_started
      vault:
        condition: service_healthy
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - backend

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_LOCAL_CONFIG: >
        {
          "backend": {
            "file": {
              "path": "/vault/file"
            }
          },
          "listener": {
            "tcp": {
              "address": "0.0.0.0:8200",
              "tls_disable": true
            }
          },
          "default_lease_ttl": "168h",
          "max_lease_ttl": "720h"
        }
    volumes:
      - vault-data:/vault/file
    command: server
    healthcheck:
      test: ["CMD", "vault", "status", "-address=http://127.0.0.1:8200"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - backend

volumes:
  vault-data:

networks:
  backend:
    driver: bridge
