#!/bin/bash

# Script para executar todos os testes unit√°rios dos servi√ßos

echo "=========================================="
echo "üöÄ Executando todos os testes unit√°rios"
echo "=========================================="

# Fun√ß√£o para verificar se o comando anterior falhou
check_status() {
    if [ $? -ne 0 ]; then
        echo "‚ùå Falha detectada no servi√ßo: $1"
        echo "=========================================="
        exit 1
    else
        echo "‚úÖ Testes do $1 executados com sucesso!"
        echo "=========================================="
    fi
}

# Navegar para o diret√≥rio raiz do projeto
cd "$(dirname "$0")"

echo ""
echo "üîç Executando testes do servi√ßo de PROJETOS (Python)..."
echo "=========================================="
cd services/projects
../../.venv/bin/python -m pytest src/tests/ -v --tb=short --cov=src/app --cov-report=term-missing
check_status "PROJETOS"

echo ""
echo "üîç Executando testes do servi√ßo de COMENT√ÅRIOS (Python)..."
echo "=========================================="
cd ../comments
../../.venv/bin/python -m pytest src/tests/ -v --tb=short --cov=src/app --cov-report=term-missing
check_status "COMENT√ÅRIOS"

echo ""
echo "üîç Executando testes do servi√ßo de LOGIN (Node.js)..."
echo "=========================================="
cd ../login
npm test -- --coverage --verbose
check_status "LOGIN"

echo ""
echo "üîç Executando testes do servi√ßo de NOTIFICA√á√ïES (Go)..."
echo "=========================================="
cd ../notifications/src
go test -v -cover ./...
check_status "NOTIFICA√á√ïES"

echo ""
echo "üéâ TODOS OS TESTES EXECUTADOS COM SUCESSO!"
echo "=========================================="
echo "üìä Resumo:"
echo "   ‚úÖ Servi√ßo de Projetos (Python)"
echo "   ‚úÖ Servi√ßo de Coment√°rios (Python)"  
echo "   ‚úÖ Servi√ßo de Login (Node.js)"
echo "   ‚úÖ Servi√ßo de Notifica√ß√µes (Go)"
echo "=========================================="
